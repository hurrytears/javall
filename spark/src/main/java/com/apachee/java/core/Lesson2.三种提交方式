第一种，standalone
第二送，yarn-cluster
spark-submit提交，跟resourcemanager通信，请求启动applicationmaster
resourcemanager会分配一个container在某个nodemanager上，启动applicationMaster
applicationgMaster相当于是driver，会去找RM请求container启动excutor
RM会分配一批container用于启动excutor
AM会去找其他的nodemanager来启动excutor，这里NM相当于Worker
excutor启动之后向AM反向注册
第三种，yarn-client
本地开辟driver，发送请求给RM，
RM在某个nodemanager上启动一个container用于启动ApplicationMaster
这里的ApplicationMaster，其实只是一个excutorLanucher,功能很有限，向RM申请Container
AM链接NM去启动excutor
excutor启动后向提交的机器反向注册


yarn-cluster vs yarn-client
yarn-client 用于测试，因为driver位于客户端，负责调度Application，会与yarn集群产生超大量的网络通信，网卡流量
    激增，可能会被SA给警告。好处在于直接执行时，本地可以看到所有的log,便于调试
yarn-cluster 用于生产环境，没有网卡流量激增的问题，缺点在于调试不方便，本地用spark-submit提交后看不到log
    yarn application -log application_id 这种命令来查看
